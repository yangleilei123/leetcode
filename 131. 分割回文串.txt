131. 分割回文串
给你一个字符串 s，请你将 s 分割成一些子串，使每个子串都是 回文串 。返回 s 所有可能的分割方案。

回文串 是正着读和反着读都一样的字符串。

 

示例 1：

输入：s = "aab"
输出：[["a","a","b"],["aa","b"]]
示例 2：

输入：s = "a"
输出：[["a"]]
 

提示：

1 <= s.length <= 16
s 仅由小写英文字母组成

解题思路：dfs+回溯，判断每个子字符串是不是回文。

class Solution {
public:
    vector<vector<string>> res;
    vector<string> tmp;
    vector<vector<string>> partition(string s) {
        if(s.size() == 0)   return res;
        dfs(s, 0);
        return res;
    }
    void dfs(string& s, int start){
        if(start == s.size())   {
            res.push_back(tmp);
            return;
        }
        for(int i = start; i < s.size(); i++){
            string st = s.substr(start, i - start + 1);
            if(!isValid(st))    continue;
            tmp.push_back(st);
            dfs(s, i + 1);
            tmp.pop_back();
        }
    }
    bool isValid(string s){
        int l = 0, r = s.size() - 1;
        while(l < r){
            if(s[l++] != s[r--])    return false;
        }
        return true;
    }
};