368. 最大整除子集
给你一个由 无重复 正整数组成的集合 nums ，请你找出并返回其中最大的整除子集 answer ，子集中每一元素对 (answer[i], answer[j]) 都应当满足：
answer[i] % answer[j] == 0 ，或
answer[j] % answer[i] == 0
如果存在多个有效解子集，返回其中任何一个均可。

 

示例 1：

输入：nums = [1,2,3]
输出：[1,2]
解释：[1,3] 也会被视为正确答案。
示例 2：

输入：nums = [1,2,4,8]
输出：[1,2,4,8]
 

提示：

1 <= nums.length <= 1000
1 <= nums[i] <= 2 * 109
nums 中的所有整数 互不相同


class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        vector<int> dp(n), di(n);
        for(int i = 0; i < n; i++){
            for(int j = 0; j < i; j++){
                if(nums[i] % nums[j] == 0 && dp[j] + 1 > dp[i]){
                    dp[i] = dp[j] + 1;
                    di[i] = j;
                }
            }
            if(dp[i] == 0){
                dp[i] = 1;
                di[i] = i;
            }
        }
        int mi = 0;
        for(int k = 0; k < n; k++){
            if(dp[k] > dp[mi])
                mi = k;
        }
        vector<int> res;
        int maxl = dp[mi];
        for(int p = 0; p < maxl; p++){
            res.push_back(nums[mi]);
            mi = di[mi];
        }
        reverse(res.begin(), res.end());
        return res;
    }
};